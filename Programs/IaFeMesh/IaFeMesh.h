// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef IaFeMesh_h
#define IaFeMesh_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include "vtkInteractorStyleSwitch.h"
#include "vtkMimxPlanarStructuredGridSource.h"
#include <FL/Fl_Tabs.H>
#include "mimxLinkedList.h"
#include <FL/Fl_Group.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Check_Browser.H>
#include "vtkMimxSTLSource.h"
#include "vtkScalarBarActor.h"
#include <FL/Fl_Output.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Value_Input.H>
#include "vtkMimxExtrudePolyData.h"
#include "vtkMimxPatchSurfaceMesh.h"
#include <FL/Fl_Input.H>
#include "vtkMimxCurve.h"
#include "vtkMimxSolidStructuredGridSource.h"
#include "vtkMimxEdgeToStructuredGrid.h"
#include "vtkStructuredGridWriter.h"
#include "vtkStructuredGridReader.h"
#include "vtkMergeCells.h"
#include "vtkMimxMirrorUnstructuredHexahedronGridCell.h"
#include "vtkIntArray.h"
#include "vtkCellData.h"
#include <FL/Fl_Choice.H>
#include "vtkMimxCreateIntervertebralDiscElementSets.h"
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_File_Chooser.H>
#include "vtkSTLReader.h"
#include "vtkUnstructuredGridReader.h"
#include "vtkMimxUGrid.h"
#include "vtkPolyDataReader.h"
#include "vtkMimxClipImageFromBox.h"
#include "vtkPolyDataWriter.h"
#include "itkImageFileWriter.h"
#include "itkImage.h"
#include "vtkUnstructuredGridWriter.h"
#include "vtkMimxAbaqusFileWriter.h"
#include "vtkSTLWriter.h"
#include <FL/Fl_Color_Chooser.H>
#include "vtkMimxBoundingBoxSurfaceMesh.h"
#include "vtkMimxEditUnstructuredHexahedronGrid.h"
#include "vtkDataSetMapper.h"
#include "vtkMimxBoundingBoxSource.h"
#include "vtkUnstructuredGrid.h"
#include "vtkMimxGenerateHexahedronMesh.h"
#include "vtkStructuredGrid.h"
#include "vtkMimxUnstructuredGridExtractWidget.h"
#include "vtkLocalAxesActor.h"
#include "vtkMimxDeleteUnstructuredHexahedronGridCell.h"
#include <string.h>
#include "vtkFlRenderWindowInteractor.h"
#include "vtkRenderer.h"
#include "vtkRenderWindow.h"
#include "vtkInteractorStyleSelect.h"
#include "vtkCallbackCommand.h"
#include "vtkPVAxesActor.h"
#include "vtkCamera.h"
#include "vtkMimxUnstructuredGridWidget.h"
#include "vtkMimxSplitUnstructuredHexahedronGridCell.h"
#include "vtkIdList.h"
#include "vtkMimxAddUnstructuredHexahedronGridCell.h"
#include <FL/Fl_Value_Output.H>
#include "vtkMimxSelectSurface.h"
#include "vtkPointLocator.h"
#include "vtkMeshQualityClass.h"
#include "vtkDataSetCollection.h"
#include "vtkMimxMergeNodesPointAndCellData.h"
#include "vtkMimxApplyNodeElementNumbers.h"
#include "vtkMimxAttachBoundingBoxMesh.h"
#include "vtkGeometryFilter.h"
#include "vtkMeshQuality.h"
#include "vtkMimxSmoothUnstructuredGridFilter.h"
#include "vtkPointData.h"
#include "vtkMimxRecalculateInteriorNodes.h"
#include "vtkMimxUnstructuredGridFromBoundingBox.h"
#include "vtkMimxCylindricalMesh.h"
#include "vtkMimxButterflyMeshFromBounds.h"
#include "vtkMimxGenerateIntervertebralDisc.h"
#include "vtkMimxUnstructuredGridFromFourPoints.h"
#include "vtkMimxFourPointsToStructuredPlanarMesh.h"
#include "vtkPoints.h"

class IaFeMesh {
public:
  IaFeMesh();
  Fl_Double_Window *MainWindow;
  Fl_Tabs *MainWindowTabs;
  Fl_Group *ImageGroup;
  Fl_Group *ClipImageFromBoxGroup;
  Fl_Light_Button *ClipImageBoxLightButton;
private:
  void cb_ClipImageBoxLightButton_i(Fl_Light_Button*, void*);
  static void cb_ClipImageBoxLightButton(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *ClipImageImagePlaneLightButton;
private:
  void cb_ClipImageImagePlaneLightButton_i(Fl_Light_Button*, void*);
  static void cb_ClipImageImagePlaneLightButton(Fl_Light_Button*, void*);
public:
  Fl_Return_Button *ClipImageClipReturnButton;
private:
  void cb_ClipImageClipReturnButton_i(Fl_Return_Button*, void*);
  static void cb_ClipImageClipReturnButton(Fl_Return_Button*, void*);
public:
  Fl_Button *ClipImageGroupCloseButton;
private:
  void cb_ClipImageGroupCloseButton_i(Fl_Button*, void*);
  static void cb_ClipImageGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Check_Browser *ImageCheckBrowser;
private:
  void cb_ImageCheckBrowser_i(Fl_Check_Browser*, void*);
  static void cb_ImageCheckBrowser(Fl_Check_Browser*, void*);
public:
  Fl_Group *SurfaceGroup;
  Fl_Group *STLCheckBrowserGroup;
  Fl_Check_Browser *STLCheckBrowser;
private:
  void cb_STLCheckBrowser_i(Fl_Check_Browser*, void*);
  static void cb_STLCheckBrowser(Fl_Check_Browser*, void*);
public:
  Fl_Group *SurfaceDistanceMapGroup;
  Fl_Output *DistanceMapTextoutput;
  Fl_Group *SurfaceSourceTargetGroup;
  Fl_Round_Button *SurfaceSourceRoundButton;
private:
  void cb_SurfaceSourceRoundButton_i(Fl_Round_Button*, void*);
  static void cb_SurfaceSourceRoundButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *SurfaceTargetButton;
private:
  void cb_SurfaceTargetButton_i(Fl_Round_Button*, void*);
  static void cb_SurfaceTargetButton(Fl_Round_Button*, void*);
public:
  Fl_Group *SurfaceDistanceMapType;
  Fl_Round_Button *SurfaceGrayScaleRoundButton;
  Fl_Round_Button *SurfaceRGBScaleRoundButton;
  Fl_Button *SurfaceDistanceMapComputeButton;
private:
  void cb_SurfaceDistanceMapComputeButton_i(Fl_Button*, void*);
  static void cb_SurfaceDistanceMapComputeButton(Fl_Button*, void*);
public:
  Fl_Button *SurfaceDistanceMapGroupCloseButton;
private:
  void cb_SurfaceDistanceMapGroupCloseButton_i(Fl_Button*, void*);
  static void cb_SurfaceDistanceMapGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Group *SpecifyDistanceMapMinMaxGroup;
  Fl_Check_Button *SpecifyMaxDistValueCheckButton;
  Fl_Value_Input *DistanceMapMaxValue;
  Fl_Group *ExtrudeSurfaceGroup;
  Fl_Button *ExtrudeSurfaceGroupCloseButton;
private:
  void cb_ExtrudeSurfaceGroupCloseButton_i(Fl_Button*, void*);
  static void cb_ExtrudeSurfaceGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Value_Input *ExtrudeSurfaceExtrusionLengthInput;
  Fl_Round_Button *ExtrudeSurfaceSetNormalDirection;
  Fl_Return_Button *ExtrudeSurfaceDoneButton;
private:
  void cb_ExtrudeSurfaceDoneButton_i(Fl_Return_Button*, void*);
  static void cb_ExtrudeSurfaceDoneButton(Fl_Return_Button*, void*);
public:
  Fl_Group *PatchSurfaceGroup;
  Fl_Button *PatchSurfaceGroupCloseButton;
private:
  void cb_PatchSurfaceGroupCloseButton_i(Fl_Button*, void*);
  static void cb_PatchSurfaceGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Return_Button *PatchSurfaceGroupPatchReturnButton;
private:
  void cb_PatchSurfaceGroupPatchReturnButton_i(Fl_Return_Button*, void*);
  static void cb_PatchSurfaceGroupPatchReturnButton(Fl_Return_Button*, void*);
public:
  Fl_Group *CurveGroup;
  Fl_Check_Browser *CurveCheckBrowser;
private:
  void cb_CurveCheckBrowser_i(Fl_Check_Browser*, void*);
  static void cb_CurveCheckBrowser(Fl_Check_Browser*, void*);
public:
  Fl_Group *CreateCurveGroup;
  Fl_Input *LineCurveLabelTextInput;
  Fl_Group *CurvePickStartEndGroup;
  Fl_Round_Button *CurvePickStartRadioButton;
private:
  void cb_CurvePickStartRadioButton_i(Fl_Round_Button*, void*);
  static void cb_CurvePickStartRadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CurvePickEndRadioButton;
private:
  void cb_CurvePickEndRadioButton_i(Fl_Round_Button*, void*);
  static void cb_CurvePickEndRadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *ContinueCreateTraceRoundButton;
private:
  void cb_ContinueCreateTraceRoundButton_i(Fl_Round_Button*, void*);
  static void cb_ContinueCreateTraceRoundButton(Fl_Round_Button*, void*);
public:
  Fl_Button *CreateCurveGroupCloseButton;
private:
  void cb_CreateCurveGroupCloseButton_i(Fl_Button*, void*);
  static void cb_CreateCurveGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Group *PlanarTransInterpGroup;
  Fl_Group *PlanarTransInterpTransGroup;
  Fl_Round_Button *PlanarMeshTransInterpCurveSelectRadioButton1;
private:
  void cb_PlanarMeshTransInterpCurveSelectRadioButton1_i(Fl_Round_Button*, void*);
  static void cb_PlanarMeshTransInterpCurveSelectRadioButton1(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *PlanarMeshTransInterpCurveSelectRadioButton2;
private:
  void cb_PlanarMeshTransInterpCurveSelectRadioButton2_i(Fl_Round_Button*, void*);
  static void cb_PlanarMeshTransInterpCurveSelectRadioButton2(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *PlanarMeshTransInterpCurveSelectRadioButton3;
private:
  void cb_PlanarMeshTransInterpCurveSelectRadioButton3_i(Fl_Round_Button*, void*);
  static void cb_PlanarMeshTransInterpCurveSelectRadioButton3(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *PlanarMeshTransInterpCurveSelectRadioButton4;
private:
  void cb_PlanarMeshTransInterpCurveSelectRadioButton4_i(Fl_Round_Button*, void*);
  static void cb_PlanarMeshTransInterpCurveSelectRadioButton4(Fl_Round_Button*, void*);
public:
  Fl_Return_Button *PlanarMeshTransInterpDoneButton;
private:
  void cb_PlanarMeshTransInterpDoneButton_i(Fl_Return_Button*, void*);
  static void cb_PlanarMeshTransInterpDoneButton(Fl_Return_Button*, void*);
public:
  Fl_Button *PlanarMeshTransInterpCreateGroupCloseButton;
private:
  void cb_PlanarMeshTransInterpCreateGroupCloseButton_i(Fl_Button*, void*);
  static void cb_PlanarMeshTransInterpCreateGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Value_Input *PlanarStructuredMeshMeshSeedButtonI;
  Fl_Value_Input *PlanarStructuredMeshMeshSeedButtonJ;
  Fl_Group *EdgeSolidTransInterpGroup;
  Fl_Group *EdgeToSolidMeshCurveSelectButtonGroup;
  Fl_Round_Button *CruveSolidTransInterpCurve1RadioButton;
private:
  void cb_CruveSolidTransInterpCurve1RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve1RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve2RadioButton;
private:
  void cb_CruveSolidTransInterpCurve2RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve2RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve3RadioButton;
private:
  void cb_CruveSolidTransInterpCurve3RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve3RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve4RadioButton;
private:
  void cb_CruveSolidTransInterpCurve4RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve4RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve5RadioButton;
private:
  void cb_CruveSolidTransInterpCurve5RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve5RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve6RadioButton;
private:
  void cb_CruveSolidTransInterpCurve6RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve6RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve7RadioButton;
private:
  void cb_CruveSolidTransInterpCurve7RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve7RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve8RadioButton;
private:
  void cb_CruveSolidTransInterpCurve8RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve8RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve9RadioButton;
private:
  void cb_CruveSolidTransInterpCurve9RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve9RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve10RadioButton;
private:
  void cb_CruveSolidTransInterpCurve10RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve10RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve11RadioButton;
private:
  void cb_CruveSolidTransInterpCurve11RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve11RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *CruveSolidTransInterpCurve12RadioButton;
private:
  void cb_CruveSolidTransInterpCurve12RadioButton_i(Fl_Round_Button*, void*);
  static void cb_CruveSolidTransInterpCurve12RadioButton(Fl_Round_Button*, void*);
public:
  Fl_Group *EdgeSolidMeshPlaneSelectGroup;
  Fl_Round_Button *EdgeToSolidPlaneSelectIJRadioButton;
  Fl_Round_Button *EdgeToSolidPlaneSelectJKRadioButton;
  Fl_Round_Button *EdgeToSolidPlaneSelectKIRadioButton;
  Fl_Round_Button *EdgeToSolidPlaneSelectNoneRadioButton;
  Fl_Return_Button *EdgeToSolidMeshDoneButton;
private:
  void cb_EdgeToSolidMeshDoneButton_i(Fl_Return_Button*, void*);
  static void cb_EdgeToSolidMeshDoneButton(Fl_Return_Button*, void*);
public:
  Fl_Button *EdgeToSolidMeshCreateGroupCloseButtonhTransInterpCreateGroupCloseButton;
private:
  void cb_EdgeToSolidMeshCreateGroupCloseButtonhTransInterpCreateGroupCloseButton_i(Fl_Button*, void*);
  static void cb_EdgeToSolidMeshCreateGroupCloseButtonhTransInterpCreateGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Value_Input *CurveToSolidMeshSeedI;
  Fl_Value_Input *CurveToSolidMeshSeedJ;
  Fl_Value_Input *CurveToSolidMeshSeedK;
  Fl_Group *StructuredPlanarMeshGroup;
  Fl_Group *StructuredPlanarMeshBrowserGroup;
  Fl_Check_Browser *StructuredPlanarMeshCheckBrowser;
  Fl_Group *CreateStructuredPlanarMeshGroup;
  Fl_Group *StructuredSolidMeshGroup;
  Fl_Group *SolidMeshCheckBrowserGroup;
  Fl_Check_Browser *StructuredSolidMeshCheckBrowser;
  Fl_Group *UnstructuredMeshGroup;
  Fl_Check_Browser *UGridCheckBrowser;
private:
  void cb_UGridCheckBrowser_i(Fl_Check_Browser*, void*);
  static void cb_UGridCheckBrowser(Fl_Check_Browser*, void*);
public:
  Fl_Group *EditBBMeshSeedGroup;
  Fl_Button *EditBBMeshSeedCloseButton;
private:
  void cb_EditBBMeshSeedCloseButton_i(Fl_Button*, void*);
  static void cb_EditBBMeshSeedCloseButton(Fl_Button*, void*);
public:
  Fl_Value_Input *EditBBMeshSeedAverageElementLengthInputButton;
  Fl_Return_Button *EditBBMeshSeedComputeButton;
private:
  void cb_EditBBMeshSeedComputeButton_i(Fl_Return_Button*, void*);
  static void cb_EditBBMeshSeedComputeButton(Fl_Return_Button*, void*);
public:
  Fl_Group *EditBBMergeNodesGroup;
  Fl_Value_Input *EditBBMergeNodesToleranceInput;
  Fl_Return_Button *EditBBMergeNodesMergeButton;
private:
  void cb_EditBBMergeNodesMergeButton_i(Fl_Return_Button*, void*);
  static void cb_EditBBMergeNodesMergeButton(Fl_Return_Button*, void*);
public:
  Fl_Button *EditBBMergeNodesGroupCloseButton;
private:
  void cb_EditBBMergeNodesGroupCloseButton_i(Fl_Button*, void*);
  static void cb_EditBBMergeNodesGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Group *EditBBMirrorGroup;
  Fl_Group *EditBBMirrorSelectAxisGroup;
  Fl_Round_Button *EditBBMirrorXAxisButton;
  Fl_Round_Button *EditBBMirrorYAxisButton;
  Fl_Round_Button *EditBBMirrorZAxisButton;
  Fl_Group *EditBBMirrorPosNegSelectGroup;
  Fl_Round_Button *EditBBPosRadioButton;
  Fl_Round_Button *EditBBNegRadioButton;
  Fl_Return_Button *EditBBMirrorButton;
private:
  void cb_EditBBMirrorButton_i(Fl_Return_Button*, void*);
  static void cb_EditBBMirrorButton(Fl_Return_Button*, void*);
public:
  Fl_Button *EditBBMirrorGroupCloseButton;
private:
  void cb_EditBBMirrorGroupCloseButton_i(Fl_Button*, void*);
  static void cb_EditBBMirrorGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Group *ChangeMeshSeedGroup;
  Fl_Button *ChangeMeshSeedGroupCloseButton;
private:
  void cb_ChangeMeshSeedGroupCloseButton_i(Fl_Button*, void*);
  static void cb_ChangeMeshSeedGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Group *ChangeMeshSeedChoiceRadioButton;
  Fl_Round_Button *ChangeMeshSeedXAxisButton;
  Fl_Round_Button *ChangeMeshSeedYAxisButton;
  Fl_Round_Button *ChangeMeshSeedZAxisButton;
  Fl_Return_Button *ChangeMeshSeedComputeButton;
private:
  void cb_ChangeMeshSeedComputeButton_i(Fl_Return_Button*, void*);
  static void cb_ChangeMeshSeedComputeButton(Fl_Return_Button*, void*);
public:
  Fl_Value_Input *ChangeMeshSeedValueInput;
  Fl_Group *CreateIntervertebralDiscElementSetsGroup;
  Fl_Button *CreateIntervertebralDiscElementSetsGroupCloseButton;
private:
  void cb_CreateIntervertebralDiscElementSetsGroupCloseButton_i(Fl_Button*, void*);
  static void cb_CreateIntervertebralDiscElementSetsGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Choice *CreateIntervertebralDiscElementSetsGroupInput;
  static Fl_Menu_Item menu_CreateIntervertebralDiscElementSetsGroupInput[];
  static Fl_Menu_Item *CreateIntervertebralDiscElementSetsGroupSelectNoneMenuItem;
  static Fl_Menu_Item *CreateIntervertebralDiscElementSetsGroupSelectMenuItem;
private:
  void cb_CreateIntervertebralDiscElementSetsGroupSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIntervertebralDiscElementSetsGroupSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIntervertebralDiscElementSetsGroupBoundingBoxSelectMenuItem;
private:
  void cb_CreateIntervertebralDiscElementSetsGroupBoundingBoxSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIntervertebralDiscElementSetsGroupBoundingBoxSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *CreateIntervertebralDiscElementSetsGroupSelectButton;
private:
  void cb_CreateIntervertebralDiscElementSetsGroupSelectButton_i(Fl_Button*, void*);
  static void cb_CreateIntervertebralDiscElementSetsGroupSelectButton(Fl_Button*, void*);
public:
  Fl_Return_Button *CreateIntervertebralDiscElementSetsGroupCreateButton;
private:
  void cb_CreateIntervertebralDiscElementSetsGroupCreateButton_i(Fl_Return_Button*, void*);
  static void cb_CreateIntervertebralDiscElementSetsGroupCreateButton(Fl_Return_Button*, void*);
public:
  Fl_Input *CreateIntervertebralElementSetsNameInput;
  Fl_Menu_Bar *CommonMenuBar;
  static Fl_Menu_Item menu_CommonMenuBar[];
  static Fl_Menu_Item *FileSubMenu;
  static Fl_Menu_Item *FileOpenSubMenu;
  static Fl_Menu_Item *FileOpenSTLMenuItem;
private:
  void cb_FileOpenSTLMenuItem_i(Fl_Menu_*, void*);
  static void cb_FileOpenSTLMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *FileOpenVTKSubMenu;
  static Fl_Menu_Item *FileOpenVTKUnstructuredGridMenuItem;
private:
  void cb_FileOpenVTKUnstructuredGridMenuItem_i(Fl_Menu_*, void*);
  static void cb_FileOpenVTKUnstructuredGridMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *FileOpenPolyDataSubMenu;
  static Fl_Menu_Item *FileOpenCurveMenuItem;
private:
  void cb_FileOpenCurveMenuItem_i(Fl_Menu_*, void*);
  static void cb_FileOpenCurveMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *FileOpenSurfaceMenuItem;
private:
  void cb_FileOpenSurfaceMenuItem_i(Fl_Menu_*, void*);
  static void cb_FileOpenSurfaceMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *FileOpenImageMenuItem;
private:
  void cb_FileOpenImageMenuItem_i(Fl_Menu_*, void*);
  static void cb_FileOpenImageMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *FileOpenStructuredGridSubMenu;
  static Fl_Menu_Item *FileOpenPlanarStructuredGridMenuItem;
private:
  void cb_FileOpenPlanarStructuredGridMenuItem_i(Fl_Menu_*, void*);
  static void cb_FileOpenPlanarStructuredGridMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *FileOpenSolidStructuredGridMenuItem;
private:
  void cb_FileOpenSolidStructuredGridMenuItem_i(Fl_Menu_*, void*);
  static void cb_FileOpenSolidStructuredGridMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *FileWriteMenuItem;
private:
  void cb_FileWriteMenuItem_i(Fl_Menu_*, void*);
  static void cb_FileWriteMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *WriteAbaqusFileFormatMenuItem;
private:
  void cb_WriteAbaqusFileFormatMenuItem_i(Fl_Menu_*, void*);
  static void cb_WriteAbaqusFileFormatMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *WriteSTLMenuItem;
private:
  void cb_WriteSTLMenuItem_i(Fl_Menu_*, void*);
  static void cb_WriteSTLMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *ExitFileMenuItem;
private:
  void cb_ExitFileMenuItem_i(Fl_Menu_*, void*);
  static void cb_ExitFileMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *BackGroundViewProperties;
private:
  void cb_BackGroundViewProperties_i(Fl_Menu_*, void*);
  static void cb_BackGroundViewProperties(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateSubMenu;
  static Fl_Menu_Item *CreateAutoSubMenu;
  static Fl_Menu_Item *PlanarMeshSubMenu;
  static Fl_Menu_Item *PlanarMeshTransinterpMenuItem;
private:
  void cb_PlanarMeshTransinterpMenuItem_i(Fl_Menu_*, void*);
  static void cb_PlanarMeshTransinterpMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *PlanarMeshFromBoundingBoxMenuItem;
private:
  void cb_PlanarMeshFromBoundingBoxMenuItem_i(Fl_Menu_*, void*);
  static void cb_PlanarMeshFromBoundingBoxMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateBoundingBoxSubMenu;
  static Fl_Menu_Item *CreateBoundingBoxFromBoundsMenuItem;
private:
  void cb_CreateBoundingBoxFromBoundsMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateBoundingBoxFromBoundsMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateBoundingBoxFromFourPoints;
private:
  void cb_CreateBoundingBoxFromFourPoints_i(Fl_Menu_*, void*);
  static void cb_CreateBoundingBoxFromFourPoints(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateSolidMeshSubMenu;
  static Fl_Menu_Item *CreateSolidMeshFromPointsMenuItem;
private:
  void cb_CreateSolidMeshFromPointsMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateSolidMeshFromPointsMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateStructuredMeshFromBoundingBoxMenuItem;
private:
  void cb_CreateStructuredMeshFromBoundingBoxMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateStructuredMeshFromBoundingBoxMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *MergeSolidMeshMenuItem;
private:
  void cb_MergeSolidMeshMenuItem_i(Fl_Menu_*, void*);
  static void cb_MergeSolidMeshMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateManualSubMenu;
  static Fl_Menu_Item *LineCurveSubMenu;
  static Fl_Menu_Item *PickMenuItem;
private:
  void cb_PickMenuItem_i(Fl_Menu_*, void*);
  static void cb_PickMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateEdgeToSurfaceMeshMenuItem;
  static Fl_Menu_Item *CreateEdgeToSolidMeshMenuItem;
private:
  void cb_CreateEdgeToSolidMeshMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateEdgeToSolidMeshMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *GeometricPrimitiveSubMenu;
  static Fl_Menu_Item *CreateIrregularCylinder;
private:
  void cb_CreateIrregularCylinder_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinder(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *MergeFacesToSurfaceMesh;
private:
  void cb_MergeFacesToSurfaceMesh_i(Fl_Menu_*, void*);
  static void cb_MergeFacesToSurfaceMesh(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *PosteriorElementMeshMenuItem;
private:
  void cb_PosteriorElementMeshMenuItem_i(Fl_Menu_*, void*);
  static void cb_PosteriorElementMeshMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *IntervertebralDiscMenuItem;
private:
  void cb_IntervertebralDiscMenuItem_i(Fl_Menu_*, void*);
  static void cb_IntervertebralDiscMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *ProjectSubMenu;
  static Fl_Menu_Item *ClosestPointProjectionMenuItem;
private:
  void cb_ClosestPointProjectionMenuItem_i(Fl_Menu_*, void*);
  static void cb_ClosestPointProjectionMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EditSubMenu;
  static Fl_Menu_Item *EditBBSubMenu;
  static Fl_Menu_Item *EditBBSplitCellMenuItem;
private:
  void cb_EditBBSplitCellMenuItem_i(Fl_Menu_*, void*);
  static void cb_EditBBSplitCellMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EditBBAddCellMenuItem;
private:
  void cb_EditBBAddCellMenuItem_i(Fl_Menu_*, void*);
  static void cb_EditBBAddCellMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *MergeBBSubMenu;
  static Fl_Menu_Item *MergeBBNodesMenuItem;
private:
  void cb_MergeBBNodesMenuItem_i(Fl_Menu_*, void*);
  static void cb_MergeBBNodesMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *MirrorBBMenuItem;
private:
  void cb_MirrorBBMenuItem_i(Fl_Menu_*, void*);
  static void cb_MirrorBBMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EditBBMeshSeedSubMenu;
  static Fl_Menu_Item *EditBBMeshSeedFromAverageElementLengthMenuItem;
private:
  void cb_EditBBMeshSeedFromAverageElementLengthMenuItem_i(Fl_Menu_*, void*);
  static void cb_EditBBMeshSeedFromAverageElementLengthMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *ChangeMeshSeedMenuItem;
private:
  void cb_ChangeMeshSeedMenuItem_i(Fl_Menu_*, void*);
  static void cb_ChangeMeshSeedMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EditBBDeleteCellMenuItem;
private:
  void cb_EditBBDeleteCellMenuItem_i(Fl_Menu_*, void*);
  static void cb_EditBBDeleteCellMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EditCopyMenuItem;
private:
  void cb_EditCopyMenuItem_i(Fl_Menu_*, void*);
  static void cb_EditCopyMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EdittransformMenuItem;
private:
  void cb_EdittransformMenuItem_i(Fl_Menu_*, void*);
  static void cb_EdittransformMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EditClipMenuItem;
private:
  void cb_EditClipMenuItem_i(Fl_Menu_*, void*);
  static void cb_EditClipMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *RecalculateInteriorNodesMenuItem;
private:
  void cb_RecalculateInteriorNodesMenuItem_i(Fl_Menu_*, void*);
  static void cb_RecalculateInteriorNodesMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EditPickSurfaceMenuItem;
private:
  void cb_EditPickSurfaceMenuItem_i(Fl_Menu_*, void*);
  static void cb_EditPickSurfaceMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *ExtrudeSurfaceMenuItem;
private:
  void cb_ExtrudeSurfaceMenuItem_i(Fl_Menu_*, void*);
  static void cb_ExtrudeSurfaceMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *PatchSurfaceMenItem;
private:
  void cb_PatchSurfaceMenItem_i(Fl_Menu_*, void*);
  static void cb_PatchSurfaceMenItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *SurfaceSmoothSubMenu;
  static Fl_Menu_Item *LaplacianSmoothingMenuItem;
private:
  void cb_LaplacianSmoothingMenuItem_i(Fl_Menu_*, void*);
  static void cb_LaplacianSmoothingMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *EditNodeAndElementNumbersNodeSetsElementSetsEtc;
  static Fl_Menu_Item *EditNodeandElementNumbers;
private:
  void cb_EditNodeandElementNumbers_i(Fl_Menu_*, void*);
  static void cb_EditNodeandElementNumbers(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateElementSetsSubMenu;
  static Fl_Menu_Item *CreateIntervertebralDiscElementSetsMenuItem;
private:
  void cb_CreateIntervertebralDiscElementSetsMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIntervertebralDiscElementSetsMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *PropertySubMenu;
  static Fl_Menu_Item *GeometryPropertyMenuItem;
private:
  void cb_GeometryPropertyMenuItem_i(Fl_Menu_*, void*);
  static void cb_GeometryPropertyMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *WidgetPropertySubMenu;
  static Fl_Menu_Item *BBWidgetMenuItem;
private:
  void cb_BBWidgetMenuItem_i(Fl_Menu_*, void*);
  static void cb_BBWidgetMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *MeshQualityMeasureMenuItem;
private:
  void cb_MeshQualityMeasureMenuItem_i(Fl_Menu_*, void*);
  static void cb_MeshQualityMeasureMenuItem(Fl_Menu_*, void*);
public:
  Fl_Menu_Bar *SurfaceMenuBar;
  static Fl_Menu_Item menu_SurfaceMenuBar[];
  static Fl_Menu_Item *SurfaceDistMapSubMenu;
  static Fl_Menu_Item *SurfaceDistMapClosestPointItem;
private:
  void cb_SurfaceDistMapClosestPointItem_i(Fl_Menu_*, void*);
  static void cb_SurfaceDistMapClosestPointItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *SurfaceRigidRegistrationSubMenu;
  static Fl_Menu_Item *SurfaceRigRegICPMenuItem;
  vtkFlRenderWindowInteractor *VTKFlWindow;
  Fl_Menu_Bar *InteractionModeMenuBar;
  static Fl_Menu_Item menu_InteractionModeMenuBar[];
  static Fl_Menu_Item *InteractionRotateMenuItem;
private:
  void cb_InteractionRotateMenuItem_i(Fl_Menu_*, void*);
  static void cb_InteractionRotateMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *InteractorPanMenuItem;
private:
  void cb_InteractorPanMenuItem_i(Fl_Menu_*, void*);
  static void cb_InteractorPanMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *InteractorZoomMenuItem;
private:
  void cb_InteractorZoomMenuItem_i(Fl_Menu_*, void*);
  static void cb_InteractorZoomMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *InteractorTraceMenuItem;
private:
  void cb_InteractorTraceMenuItem_i(Fl_Menu_*, void*);
  static void cb_InteractorTraceMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *InteractionBoundingBoxMenuItem;
private:
  void cb_InteractionBoundingBoxMenuItem_i(Fl_Menu_*, void*);
  static void cb_InteractionBoundingBoxMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *DoneButton;
private:
  void cb_DoneButton_i(Fl_Button*, void*);
  static void cb_DoneButton(Fl_Button*, void*);
public:
  Fl_Group *TransformGroup;
  Fl_Group *TransformTypeGroup;
  Fl_Round_Button *RotateTransformRadioButton;
  Fl_Round_Button *ScaleTransformRadioButton;
  Fl_Round_Button *TranslateTransformRadioButton;
  Fl_Choice *RotateTransformAxisChoice;
  static Fl_Menu_Item menu_RotateTransformAxisChoice[];
  static Fl_Menu_Item *RotateNoneMenuItem;
  static Fl_Menu_Item *RotateXMenuItem;
  static Fl_Menu_Item *RotateYMenuItem;
  static Fl_Menu_Item *RotateZMenuItem;
  Fl_Value_Input *TransformCenterX;
  Fl_Value_Input *TransformCenterY;
  Fl_Value_Input *TransformCenterZ;
  Fl_Value_Input *TransformScaleFactor;
  Fl_Value_Input *TransformTranslateX;
  Fl_Value_Input *TransformTranslateY;
  Fl_Value_Input *TransformTranslateZ;
  Fl_Button *TransformGroupCloseButton;
private:
  void cb_TransformGroupCloseButton_i(Fl_Button*, void*);
  static void cb_TransformGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Return_Button *TransformDoneButton;
private:
  void cb_TransformDoneButton_i(Fl_Return_Button*, void*);
  static void cb_TransformDoneButton(Fl_Return_Button*, void*);
public:
  Fl_Group *GeometryPropertyGroup;
  Fl_Value_Output *GeometricCenterPropertyX;
  Fl_Value_Output *GeometricCenterPropertyZ;
  Fl_Value_Output *GeometricCenterPropertyY;
  Fl_Button *GeometryPropertyGroupCloseButton;
private:
  void cb_GeometryPropertyGroupCloseButton_i(Fl_Button*, void*);
  static void cb_GeometryPropertyGroupCloseButton(Fl_Button*, void*);
public:
  vtkFlRenderWindowInteractor *VTKFlWindowNormal;
  Fl_Group *BBWidgetPropertyGroup;
  Fl_Value_Input *BBWidgetRadiusInput;
private:
  void cb_BBWidgetRadiusInput_i(Fl_Value_Input*, void*);
  static void cb_BBWidgetRadiusInput(Fl_Value_Input*, void*);
public:
  Fl_Group *PickSurfacePropertyGroup;
  Fl_Value_Input *PickSurfaceRadiusInput;
private:
  void cb_PickSurfaceRadiusInput_i(Fl_Value_Input*, void*);
  static void cb_PickSurfaceRadiusInput(Fl_Value_Input*, void*);
public:
  Fl_Button *PickSurfaceClearButton;
private:
  void cb_PickSurfaceClearButton_i(Fl_Button*, void*);
  static void cb_PickSurfaceClearButton(Fl_Button*, void*);
public:
  Fl_Button *PickSurfacePropertyGroupCloseButton;
private:
  void cb_PickSurfacePropertyGroupCloseButton_i(Fl_Button*, void*);
  static void cb_PickSurfacePropertyGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Return_Button *PickSurfacePropertyGroupDoneButton;
private:
  void cb_PickSurfacePropertyGroupDoneButton_i(Fl_Return_Button*, void*);
  static void cb_PickSurfacePropertyGroupDoneButton(Fl_Return_Button*, void*);
public:
  Fl_Button *SelectSurfaceStopPickingButton;
private:
  void cb_SelectSurfaceStopPickingButton_i(Fl_Button*, void*);
  static void cb_SelectSurfaceStopPickingButton(Fl_Button*, void*);
public:
  Fl_Button *SelectSurfaceStartPickingButton;
private:
  void cb_SelectSurfaceStartPickingButton_i(Fl_Button*, void*);
  static void cb_SelectSurfaceStartPickingButton(Fl_Button*, void*);
public:
  Fl_Group *MeshQualityGroup;
  Fl_Value_Input *MeshQualityShrinkFactor;
private:
  void cb_MeshQualityShrinkFactor_i(Fl_Value_Input*, void*);
  static void cb_MeshQualityShrinkFactor(Fl_Value_Input*, void*);
public:
  Fl_Button *MeshQualityGroupCloseButton;
private:
  void cb_MeshQualityGroupCloseButton_i(Fl_Button*, void*);
  static void cb_MeshQualityGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Group *MergeSolidMeshGroup;
  Fl_Return_Button *MergeSolidMeshMergeButton;
private:
  void cb_MergeSolidMeshMergeButton_i(Fl_Return_Button*, void*);
  static void cb_MergeSolidMeshMergeButton(Fl_Return_Button*, void*);
public:
  Fl_Button *MergeSolidMeshGroupCloseButton;
private:
  void cb_MergeSolidMeshGroupCloseButton_i(Fl_Button*, void*);
  static void cb_MergeSolidMeshGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Group *AbaqusFormatPropertiesGroup;
  Fl_Button *AbaqusFormatPropertiesGroupCloseButton;
private:
  void cb_AbaqusFormatPropertiesGroupCloseButton_i(Fl_Button*, void*);
  static void cb_AbaqusFormatPropertiesGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Value_Input *AbaqusFormatPropertiesGroupStartingNodeNumberInput;
  Fl_Value_Input *AbaqusFormatPropertiesGroupStartingElementNumberInput;
  Fl_Choice *ApplyNodesElementNumbersMeshInput;
  static Fl_Menu_Item menu_ApplyNodesElementNumbersMeshInput[];
  static Fl_Menu_Item *ApplyNodesElementNumbersNoneSelectMenuItem;
private:
  void cb_ApplyNodesElementNumbersNoneSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_ApplyNodesElementNumbersNoneSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *ApplyNodesElementNumbersUnstructuredGridSelectMenuItem;
private:
  void cb_ApplyNodesElementNumbersUnstructuredGridSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_ApplyNodesElementNumbersUnstructuredGridSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *ApplyNodesElementNumbersMeshSelectButton;
private:
  void cb_ApplyNodesElementNumbersMeshSelectButton_i(Fl_Button*, void*);
  static void cb_ApplyNodesElementNumbersMeshSelectButton(Fl_Button*, void*);
public:
  Fl_Button *ApplyNodeElementNumberNodeNumberApplyButton;
private:
  void cb_ApplyNodeElementNumberNodeNumberApplyButton_i(Fl_Button*, void*);
  static void cb_ApplyNodeElementNumberNodeNumberApplyButton(Fl_Button*, void*);
public:
  Fl_Button *ApplyNodeElementNumberElementNumberApplyButton;
private:
  void cb_ApplyNodeElementNumberElementNumberApplyButton_i(Fl_Button*, void*);
  static void cb_ApplyNodeElementNumberElementNumberApplyButton(Fl_Button*, void*);
public:
  Fl_Input *AbaqusFormatElementSetNameInput;
  Fl_Group *DisplayGroup;
  Fl_Button *DisplayGroupShowButton;
private:
  void cb_DisplayGroupShowButton_i(Fl_Button*, void*);
  static void cb_DisplayGroupShowButton(Fl_Button*, void*);
public:
  Fl_Button *DisplayGroupHideButton;
private:
  void cb_DisplayGroupHideButton_i(Fl_Button*, void*);
  static void cb_DisplayGroupHideButton(Fl_Button*, void*);
public:
  Fl_Button *DisplayGroupDeleteButton;
private:
  void cb_DisplayGroupDeleteButton_i(Fl_Button*, void*);
  static void cb_DisplayGroupDeleteButton(Fl_Button*, void*);
public:
  Fl_Group *PosteriorElementMeshGroup;
  Fl_Group *PosteriorElementSurfaceDefinitions;
  Fl_Round_Button *PosteriorElementCompleteSurfaceRadioButton;
private:
  void cb_PosteriorElementCompleteSurfaceRadioButton_i(Fl_Round_Button*, void*);
  static void cb_PosteriorElementCompleteSurfaceRadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *PosteriorElementCutSurfaceRadioButton;
private:
  void cb_PosteriorElementCutSurfaceRadioButton_i(Fl_Round_Button*, void*);
  static void cb_PosteriorElementCutSurfaceRadioButton(Fl_Round_Button*, void*);
public:
  Fl_Group *PosteriorElementUnstructuredMeshGroup;
  Fl_Round_Button *PosteriorElementBoundingBoxRadioButton;
private:
  void cb_PosteriorElementBoundingBoxRadioButton_i(Fl_Round_Button*, void*);
  static void cb_PosteriorElementBoundingBoxRadioButton(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *PosteriorElementVertebralBodyRadioButton;
private:
  void cb_PosteriorElementVertebralBodyRadioButton_i(Fl_Round_Button*, void*);
  static void cb_PosteriorElementVertebralBodyRadioButton(Fl_Round_Button*, void*);
public:
  Fl_Return_Button *PosteriorElementMeshReturnButton;
private:
  void cb_PosteriorElementMeshReturnButton_i(Fl_Return_Button*, void*);
  static void cb_PosteriorElementMeshReturnButton(Fl_Return_Button*, void*);
public:
  Fl_Button *PosteriorElementMeshGroupCloseButton;
private:
  void cb_PosteriorElementMeshGroupCloseButton_i(Fl_Button*, void*);
  static void cb_PosteriorElementMeshGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Return_Button *PosteriorElementMeshSmoothReturnButton;
private:
  void cb_PosteriorElementMeshSmoothReturnButton_i(Fl_Return_Button*, void*);
  static void cb_PosteriorElementMeshSmoothReturnButton(Fl_Return_Button*, void*);
public:
  Fl_Value_Input *PosteriorElementMeshSmoothingNumberOfIterations;
  Fl_Button *PosteriorElementRecalculateInteriorNodesButton;
private:
  void cb_PosteriorElementRecalculateInteriorNodesButton_i(Fl_Button*, void*);
  static void cb_PosteriorElementRecalculateInteriorNodesButton(Fl_Button*, void*);
public:
  Fl_Group *CreateMeshFromBoundingBoxGroup;
  Fl_Button *CreateMeshFromBoundingBoxGoupCloseButton;
private:
  void cb_CreateMeshFromBoundingBoxGoupCloseButton_i(Fl_Button*, void*);
  static void cb_CreateMeshFromBoundingBoxGoupCloseButton(Fl_Button*, void*);
public:
  Fl_Choice *CreateMeshFromBoundingBoxGroupInput;
  static Fl_Menu_Item menu_CreateMeshFromBoundingBoxGroupInput[];
  static Fl_Menu_Item *CreateMeshFromBoundingBoxNoneMenuItem;
  static Fl_Menu_Item *CreateMeshFromBoundingBoxBoundingBoxSelectMenuItem;
private:
  void cb_CreateMeshFromBoundingBoxBoundingBoxSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateMeshFromBoundingBoxBoundingBoxSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateMeshFromBoundingBoxSurfaceSelectMenuItem;
private:
  void cb_CreateMeshFromBoundingBoxSurfaceSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateMeshFromBoundingBoxSurfaceSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *CreateMeshFromBoundingBoxSelectButton;
private:
  void cb_CreateMeshFromBoundingBoxSelectButton_i(Fl_Button*, void*);
  static void cb_CreateMeshFromBoundingBoxSelectButton(Fl_Button*, void*);
public:
  Fl_Return_Button *CreateMeshFromBoundingBoxMeshButton;
private:
  void cb_CreateMeshFromBoundingBoxMeshButton_i(Fl_Return_Button*, void*);
  static void cb_CreateMeshFromBoundingBoxMeshButton(Fl_Return_Button*, void*);
public:
  Fl_Group *RecalculateInteriorNodesGroup;
  Fl_Button *RecalculateInteriorNodesGoupCloseButton;
private:
  void cb_RecalculateInteriorNodesGoupCloseButton_i(Fl_Button*, void*);
  static void cb_RecalculateInteriorNodesGoupCloseButton(Fl_Button*, void*);
public:
  Fl_Choice *RecalculateInteriorNodesGoupInput;
  static Fl_Menu_Item menu_RecalculateInteriorNodesGoupInput[];
  static Fl_Menu_Item *RecalculateInteriorNodesNoneSelectMenuItem;
private:
  void cb_RecalculateInteriorNodesNoneSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_RecalculateInteriorNodesNoneSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *RecalculateInteriorNodesBoundingBoxSelectMenuItem;
private:
  void cb_RecalculateInteriorNodesBoundingBoxSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_RecalculateInteriorNodesBoundingBoxSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *RecalculateInteriorNodesUnstructuredGridSelectMenuItem;
private:
  void cb_RecalculateInteriorNodesUnstructuredGridSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_RecalculateInteriorNodesUnstructuredGridSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *RecalculateInteriorNodesSelectButton;
private:
  void cb_RecalculateInteriorNodesSelectButton_i(Fl_Button*, void*);
  static void cb_RecalculateInteriorNodesSelectButton(Fl_Button*, void*);
public:
  Fl_Return_Button *RecalculateInteriorNodesButton;
private:
  void cb_RecalculateInteriorNodesButton_i(Fl_Return_Button*, void*);
  static void cb_RecalculateInteriorNodesButton(Fl_Return_Button*, void*);
public:
  Fl_Group *LaplacianSmoothingGroup;
  Fl_Button *LaplacinaSmoothingGroupCloseButton;
private:
  void cb_LaplacinaSmoothingGroupCloseButton_i(Fl_Button*, void*);
  static void cb_LaplacinaSmoothingGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Choice *LaplacianSmoothingGroupInput;
  static Fl_Menu_Item menu_LaplacianSmoothingGroupInput[];
  static Fl_Menu_Item *LaplacianSmoothingSelectNoneMenuItem;
  static Fl_Menu_Item *LaplacianSmoothingUGridSelectMenuItem;
private:
  void cb_LaplacianSmoothingUGridSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_LaplacianSmoothingUGridSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *LaplacianSmoothingSurfaceSelectMenuItem;
private:
  void cb_LaplacianSmoothingSurfaceSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_LaplacianSmoothingSurfaceSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *LaplacianSmoothingSelectButton;
private:
  void cb_LaplacianSmoothingSelectButton_i(Fl_Button*, void*);
  static void cb_LaplacianSmoothingSelectButton(Fl_Button*, void*);
public:
  Fl_Return_Button *LaplacianSmoothingMeshButton;
private:
  void cb_LaplacianSmoothingMeshButton_i(Fl_Return_Button*, void*);
  static void cb_LaplacianSmoothingMeshButton(Fl_Return_Button*, void*);
public:
  Fl_Group *CreateIrregularCylindricalMeshGroup;
  Fl_Return_Button *IrregularCylinderMeshButton;
private:
  void cb_IrregularCylinderMeshButton_i(Fl_Return_Button*, void*);
  static void cb_IrregularCylinderMeshButton(Fl_Return_Button*, void*);
public:
  Fl_Button *CreateIrregularCylinderMeshGroupCloseButton;
private:
  void cb_CreateIrregularCylinderMeshGroupCloseButton_i(Fl_Button*, void*);
  static void cb_CreateIrregularCylinderMeshGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Choice *CreateIrregularCylinderGoupTraceInput;
  static Fl_Menu_Item menu_CreateIrregularCylinderGoupTraceInput[];
  static Fl_Menu_Item *CreateIrregularCylinderCurveNoneSelectMenuItem;
private:
  void cb_CreateIrregularCylinderCurveNoneSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderCurveNoneSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIrregularCylinderCurveSuperiorInnerSelectMenuItem;
private:
  void cb_CreateIrregularCylinderCurveSuperiorInnerSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderCurveSuperiorInnerSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIrregularCylinderCurveSuperiorOuterSelectMenuItem;
private:
  void cb_CreateIrregularCylinderCurveSuperiorOuterSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderCurveSuperiorOuterSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIrregularCylinderCurveInferiorInnerSelectMenuItem;
private:
  void cb_CreateIrregularCylinderCurveInferiorInnerSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderCurveInferiorInnerSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIrregularCylinderCurveInferiorOuterSelectMenuItem;
private:
  void cb_CreateIrregularCylinderCurveInferiorOuterSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderCurveInferiorOuterSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *CreateIrregularCylinderCurveSelectButton;
private:
  void cb_CreateIrregularCylinderCurveSelectButton_i(Fl_Button*, void*);
  static void cb_CreateIrregularCylinderCurveSelectButton(Fl_Button*, void*);
public:
  Fl_Choice *CreateIrregularCylinderGoupBoundingBoxInput;
  static Fl_Menu_Item menu_CreateIrregularCylinderGoupBoundingBoxInput[];
  static Fl_Menu_Item *CreateIrregularCylinderBoundingBoxNoneSelectMenuItem;
private:
  void cb_CreateIrregularCylinderBoundingBoxNoneSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderBoundingBoxNoneSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIrregularCylinderCurveCreateBoundingBoxNewSelectMenuItem;
private:
  void cb_CreateIrregularCylinderCurveCreateBoundingBoxNewSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderCurveCreateBoundingBoxNewSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIrregularCylinderCurveSelectExistingBoundingBoxSelectMenuItem;
private:
  void cb_CreateIrregularCylinderCurveSelectExistingBoundingBoxSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderCurveSelectExistingBoundingBoxSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *CreateIrregularCylinderBoundingBoxSelectButton;
private:
  void cb_CreateIrregularCylinderBoundingBoxSelectButton_i(Fl_Button*, void*);
  static void cb_CreateIrregularCylinderBoundingBoxSelectButton(Fl_Button*, void*);
public:
  Fl_Choice *CreateIrregularCylinderGoupSurfaceInput;
  static Fl_Menu_Item menu_CreateIrregularCylinderGoupSurfaceInput[];
  static Fl_Menu_Item *CreateIrregularCylinderSurfaceNoneSelectMenuItem;
private:
  void cb_CreateIrregularCylinderSurfaceNoneSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderSurfaceNoneSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIrregularCylinderSurfaceSelectMenuItem;
private:
  void cb_CreateIrregularCylinderSurfaceSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIrregularCylinderSurfaceSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *CreateIrregularCylinderSurfaceSelectButton;
private:
  void cb_CreateIrregularCylinderSurfaceSelectButton_i(Fl_Button*, void*);
  static void cb_CreateIrregularCylinderSurfaceSelectButton(Fl_Button*, void*);
public:
  Fl_Group *CreateIntervertebralDiscMeshGroup;
  Fl_Button *CreateIntervertebralDiscMeshGroupCloseButton;
private:
  void cb_CreateIntervertebralDiscMeshGroupCloseButton_i(Fl_Button*, void*);
  static void cb_CreateIntervertebralDiscMeshGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Choice *CreateIntervertebralDiscMeshGroupInput;
  static Fl_Menu_Item menu_CreateIntervertebralDiscMeshGroupInput[];
  static Fl_Menu_Item *CreateIntervertebralDiscMeshSelectNoneMenuItem;
  static Fl_Menu_Item *CreateIntervertebraDiscMeshLowVertebraSelectMenuItem;
private:
  void cb_CreateIntervertebraDiscMeshLowVertebraSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIntervertebraDiscMeshLowVertebraSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIntervertebralDiscMeshUpperVertebraSelectMenuItem;
private:
  void cb_CreateIntervertebralDiscMeshUpperVertebraSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIntervertebralDiscMeshUpperVertebraSelectMenuItem(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *CreateIntervertebraDiscMeshBoundingBoxSelectMenuItem;
private:
  void cb_CreateIntervertebraDiscMeshBoundingBoxSelectMenuItem_i(Fl_Menu_*, void*);
  static void cb_CreateIntervertebraDiscMeshBoundingBoxSelectMenuItem(Fl_Menu_*, void*);
public:
  Fl_Button *CreateIntervertebralDiscMeshGroupSelectButton;
private:
  void cb_CreateIntervertebralDiscMeshGroupSelectButton_i(Fl_Button*, void*);
  static void cb_CreateIntervertebralDiscMeshGroupSelectButton(Fl_Button*, void*);
public:
  Fl_Return_Button *CreateIntervertebralDiscMeshGroupMeshButton;
private:
  void cb_CreateIntervertebralDiscMeshGroupMeshButton_i(Fl_Return_Button*, void*);
  static void cb_CreateIntervertebralDiscMeshGroupMeshButton(Fl_Return_Button*, void*);
public:
  Fl_Value_Input *NumberOfDivisionsAlongThicknessValueInput;
  Fl_Group *ExtractWidgetPropertyGroup;
  Fl_Value_Input *ExtractWidgetRadiusInput;
private:
  void cb_ExtractWidgetRadiusInput_i(Fl_Value_Input*, void*);
  static void cb_ExtractWidgetRadiusInput(Fl_Value_Input*, void*);
public:
  Fl_Button *ExtractWidgetClearButton;
private:
  void cb_ExtractWidgetClearButton_i(Fl_Button*, void*);
  static void cb_ExtractWidgetClearButton(Fl_Button*, void*);
public:
  Fl_Button *ExtractWidgetPropertyGroupCloseButton;
private:
  void cb_ExtractWidgetPropertyGroupCloseButton_i(Fl_Button*, void*);
  static void cb_ExtractWidgetPropertyGroupCloseButton(Fl_Button*, void*);
public:
  Fl_Return_Button *ExtractWidgetPropertyGroupDoneButton;
private:
  void cb_ExtractWidgetPropertyGroupDoneButton_i(Fl_Return_Button*, void*);
  static void cb_ExtractWidgetPropertyGroupDoneButton(Fl_Return_Button*, void*);
public:
  void Show();
  vtkRenderer* VTKRenderer;
  vtkRenderWindow* VTKRenderWindow;
  void FitView();
private:
  vtkInteractorStyleSelect* InteractorStyleSelect;
public:
  void HideAll();
  vtkMimxSTLSource* GetSTLCheckedItem();
private:
  vtkMimxSTLSource* SurfaceSource;
  vtkMimxSTLSource* SurfaceTarget;
  vtkScalarBarActor* ScalarBarActor;
  vtkPVAxesActor* PVAxesActor;
public:
  vtkRenderer* AxisRenderer;
private:
  vtkCallbackCommand* CallBackCommand;
  CLinkedList<vtkMimxCurve*> vtkCurveList;
  vtkMimxCurve *Curve[12];
public:
  vtkMimxCurve* GetCurveCheckedItem();
private:
  CLinkedList<vtkMimxSTLSource*> vtkSTLSourceList;
  CLinkedList<vtkMimxSolidStructuredGridSource*> vtkSolidStructuredGridSourceList;
  vtkMimxBoundingBoxSource* boundingbox;
  vtkMimxEditUnstructuredHexahedronGrid* editunstructuredhexahedrongrid;
  vtkMimxUnstructuredGridWidget* unstructuredgridwidget;
  vtkActor* unstructuredgridactor;
  vtkMimxUnstructuredGridExtractWidget *unstructuredgridextractwidget;
  vtkMimxGenerateHexahedronMesh* StructuredHexahedronMesh;
public:
  void Reset();
private:
  const char* FilePath;
  CLinkedList<vtkMimxUGrid*> vtkUGridList;
public:
  vtkMimxUGrid* GetUGridCheckedItem();
  vtkMimxClipImageFromBox* GetImageCheckedItem();
private:
  CLinkedList<vtkMimxClipImageFromBox*> vtkImageList;
  CLinkedList<vtkMimxBoundingBoxSource*> vtkBoundingBoxList;
  vtkLocalAxesActor *LocalAxesActor;
public:
  vtkMimxPlanarStructuredGridSource* GetPlanarStructuredGridCheckedItem();
private:
  CLinkedList<vtkMimxPlanarStructuredGridSource*> vtkPlanarStructuredGridList;
  vtkMeshQualityClass *MeshQuality;
public:
  int GetSTLCheckedNumber();
private:
  vtkPolyData *CompleteSurface;
  vtkPolyData *CutSurface;
  vtkUnstructuredGrid *BoundingBoxUGrid;
  vtkUnstructuredGrid *UGrid;
public:
  vtkMimxSolidStructuredGridSource* GetSolidStructuredGridCheckedItem();
private:
  char choice[30];
public:
  void InitializeAll();
private:
  vtkUnstructuredGrid *UGrid1;
public:
  int GetSTLCheckedItemNumber();
  void DeleteSTLCheckBrowserEntries();
  void DeleteUGridCheckBrowserEntries();
};
void updateAxis(vtkObject* caller, unsigned long , void* arg, void* );
#endif
